{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DRILON\\\\Desktop\\\\Bibliothec\\\\frontend\\\\src\\\\components\\\\App\\\\App.js\";\nimport logo from \"../../logo.svg\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Categories from \"../Categories/categories\";\nimport Countries from \"../Countries/countries\";\nimport Books from \"../Books/BookList/books\";\nimport Header from '../Header/header';\nimport Footer from '../Footer/footer';\nimport BibliothecService from \"../../repository/bibliothecRepository\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadCategories = () => {\n      BibliothecService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.loadBooks = () => {\n      BibliothecService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadCountries = () => {\n      BibliothecService.fetchCountries().then(data => {\n        this.setState({\n          countries: data.data\n        });\n      });\n    };\n\n    this.state = {\n      categories: [],\n      countries: [],\n      books: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/categories\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Categories, {\n              categories: this.state.categories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/countries\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Countries, {\n              countries: this.state.countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Books, {\n              books: this.state.books\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n    this.loadCategories();\n    this.loadCountries();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/DRILON/Desktop/Bibliothec/frontend/src/components/App/App.js"],"names":["React","Component","Categories","Countries","Books","Header","Footer","BibliothecService","BrowserRouter","Router","Redirect","Route","App","constructor","props","loadCategories","fetchCategories","then","data","setState","categories","loadBooks","fetchBooks","books","loadCountries","fetchCountries","countries","state","render","componentDidMount"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,QAAjC,EAA2CC,KAA3C,QAAuD,kBAAvD;;;AAGA,MAAMC,GAAN,SAAkBX,SAAlB,CAA2B;AACzBY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,cA7BmB,GA6BF,MAAM;AACrBR,MAAAA,iBAAiB,CAACS,eAAlB,GACKC,IADL,CACWC,IAAD,IAAU;AACd,aAAKC,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAEF,IAAI,CAACA;AADL,SAAd;AAGD,OALL;AAMD,KApCkB;;AAAA,SAqCjBG,SArCiB,GAqCL,MAAM;AACdd,MAAAA,iBAAiB,CAACe,UAAlB,GACKL,IADL,CACWC,IAAD,IAAU;AACZ,aAAKC,QAAL,CAAc;AACVI,UAAAA,KAAK,EAAEL,IAAI,CAACA;AADF,SAAd;AAGH,OALL;AAMH,KA5CgB;;AAAA,SA6CjBM,aA7CiB,GA6CD,MAAM;AAClBjB,MAAAA,iBAAiB,CAACkB,cAAlB,GACKR,IADL,CACWC,IAAD,IAAU;AACZ,aAAKC,QAAL,CAAc;AACVO,UAAAA,SAAS,EAAER,IAAI,CAACA;AADN,SAAd;AAGH,OALL;AAMH,KApDgB;;AAEjB,SAAKS,KAAL,GAAa;AACTP,MAAAA,UAAU,EAAE,EADH;AAETM,MAAAA,SAAS,EAAE,EAFF;AAGTH,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,MAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE,WAAhB;AAAA,kCAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,aAAb;AAA4B,YAAA,KAAK,MAAjC;AAAkC,YAAA,MAAM,EACtC,mBAAM,QAAC,UAAD;AAAY,cAAA,UAAU,EAAE,KAAKD,KAAL,CAAWP;AAAnC;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,kBAFF,eAII,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,YAAb;AAA2B,YAAA,KAAK,MAAhC;AAAiC,YAAA,MAAM,EACnC,mBAAM,QAAC,SAAD;AAAW,cAAA,SAAS,EAAE,KAAKO,KAAL,CAAWD;AAAjC;AAAA;AAAA;AAAA;AAAA;AADV;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAMI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,QAAb;AAAuB,YAAA,KAAK,MAA5B;AAA6B,YAAA,MAAM,EAC/B,mBAAM,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE,KAAKC,KAAL,CAAWJ;AAAzB;AAAA;AAAA;AAAA;AAAA;AADV;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAcI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBD;;AA0BCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,SAAL;AACA,SAAKN,cAAL;AACA,SAAKS,aAAL;AACL;;AA3DwB;;AA+D3B,eAAeZ,GAAf","sourcesContent":["import logo from '../../logo.svg';\nimport './App.css';\nimport React, {Component} from \"react\";\nimport Categories from \"../Categories/categories\";\nimport Countries from \"../Countries/countries\"\nimport Books from \"../Books/BookList/books\";\nimport Header from '../Header/header';\nimport Footer from '../Footer/footer';\n\nimport BibliothecService from \"../../repository/bibliothecRepository\";\nimport {BrowserRouter as Router, Redirect, Route} from \"react-router-dom\";\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        categories: [],\n        countries: [],\n        books: []\n    }\n  }\n\n  render() {\n    return (\n        <Router>\n            <Header/>\n          <main>\n            <div className={\"container\"}>\n\n              <Route path={\"/categories\"} exact render={\n                () => <Categories categories={this.state.categories}/>}/>\n                <Route path={\"/countries\"} exact render={\n                    () => <Countries countries={this.state.countries}/>}/>\n                <Route path={\"/books\"} exact render={\n                    () => <Books books={this.state.books}/>}/>\n              {/*<Redirect to={\"/categories\"}/>*/}\n            </div>\n          </main>\n            <Footer/>\n        </Router>\n    );\n  }\n  loadCategories = () => {\n    BibliothecService.fetchCategories()\n        .then((data) => {\n          this.setState({\n            categories: data.data\n          })\n        });\n  }\n    loadBooks = () => {\n        BibliothecService.fetchBooks()\n            .then((data) => {\n                this.setState({\n                    books: data.data\n                })\n            });\n    }\n    loadCountries = () => {\n        BibliothecService.fetchCountries()\n            .then((data) => {\n                this.setState({\n                    countries: data.data\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.loadBooks();\n        this.loadCategories();\n        this.loadCountries();\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}