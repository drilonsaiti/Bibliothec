{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DRILON\\\\Desktop\\\\Bibliothec\\\\frontend\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Categories from \"../Categories/categories\";\nimport Countries from \"../Countries/countries\";\nimport Authors from '../Authors/authors';\nimport Books from \"../Books/BookList/books\";\nimport BookAdd from '../Books/BookAdd/bookAdd';\nimport BookEdit from \"../Books/BookEdit/bookEdit\";\nimport Header from '../Header/header';\nimport Footer from '../Footer/footer';\nimport BibliothecService from \"../../repository/bibliothecRepository\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadCategories = () => {\n      BibliothecService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.loadBooks = () => {\n      BibliothecService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadCountries = () => {\n      BibliothecService.fetchCountries().then(data => {\n        this.setState({\n          countries: data.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      BibliothecService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.deleteBook = id => {\n      BibliothecService.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.takeBook = id => {\n      BibliothecService.markAsTakenBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, category, author, availableCopies) => {\n      BibliothecService.addBook(name, category, author, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.getBook = id => {\n      BibliothecService.getBook(id).then(data => {\n        this.setState({\n          selectedBook: data.data\n        });\n      });\n    };\n\n    this.editBook = (id, name, category, author, availableCopies) => {\n      BibliothecService.editBook(id, name, category, author, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.state = {\n      categories: [],\n      countries: [],\n      books: [],\n      authors: [],\n      selectedBook: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/categories\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Categories, {\n              categories: this.state.categories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/countries\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Countries, {\n              countries: this.state.countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/authors\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Authors, {\n              authors: this.state.authors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Books, {\n              books: this.state.books,\n              onDelete: this.deleteBook,\n              onEdit: this.getBook,\n              onTake: this.takeBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit/:id\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookEdit, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onEditBook: this.editBook,\n              books: this.state.selectedBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookAdd, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onAddBook: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n    this.loadCategories();\n    this.loadCountries();\n    this.loadAuthors();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/DRILON/Desktop/Bibliothec/frontend/src/components/App/App.js"],"names":["React","Component","Categories","Countries","Authors","Books","BookAdd","BookEdit","Header","Footer","BibliothecService","BrowserRouter","Router","Redirect","Route","App","constructor","props","loadCategories","fetchCategories","then","data","setState","categories","loadBooks","fetchBooks","books","loadCountries","fetchCountries","countries","loadAuthors","fetchAuthors","authors","deleteBook","id","takeBook","markAsTakenBook","addBook","name","category","author","availableCopies","getBook","selectedBook","editBook","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {Component} from \"react\";\nimport Categories from \"../Categories/categories\";\nimport Countries from \"../Countries/countries\"\nimport Authors from '../Authors/authors';\nimport Books from \"../Books/BookList/books\";\nimport BookAdd from '../Books/BookAdd/bookAdd'\nimport BookEdit from \"../Books/BookEdit/bookEdit\";\nimport Header from '../Header/header';\nimport Footer from '../Footer/footer';\n\nimport BibliothecService from \"../../repository/bibliothecRepository\";\nimport {BrowserRouter as Router, Redirect, Route} from \"react-router-dom\";\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        categories: [],\n        countries: [],\n        books: [],\n        authors:[],\n        selectedBook: {}\n    }\n  }\n\n  render() {\n    return (\n        <Router>\n            <Header/>\n          <main>\n            <div className={\"container\"}>\n\n              <Route path={\"/categories\"} exact render={\n                () => <Categories categories={this.state.categories}/>}/>\n\n                <Route path={\"/countries\"} exact render={\n                    () => <Countries countries={this.state.countries}/>}/>\n\n                <Route path={\"/authors\"} exact render={\n                    () => <Authors authors={this.state.authors}/>}/>\n\n                <Route path={\"/books\"} exact render={() =>\n                    <Books books={this.state.books}\n                              onDelete={this.deleteBook}\n                                onEdit={this.getBook}\n                                onTake={this.takeBook}/>}/>\n\n                <Route path={\"/books/edit/:id\"} exact render={() =>\n                    <BookEdit categories={this.state.categories}\n                                 authors={this.state.authors}\n                                 onEditBook={this.editBook}\n                                 books={this.state.selectedBook}/>}/>\n\n                <Route path={\"/books/add\"} exact render={() =>\n                    <BookAdd categories={this.state.categories}\n                                authors={this.state.authors}\n                                onAddBook={this.addBook}/>}/>\n                <Redirect to={\"/books\"}/>\n            </div>\n          </main>\n            <Footer/>\n        </Router>\n    );\n  }\n  loadCategories = () => {\n    BibliothecService.fetchCategories()\n        .then((data) => {\n          this.setState({\n            categories: data.data\n          })\n        });\n  }\n    loadBooks = () => {\n        BibliothecService.fetchBooks()\n            .then((data) => {\n                this.setState({\n                    books: data.data\n                })\n            });\n    }\n    loadCountries = () => {\n        BibliothecService.fetchCountries()\n            .then((data) => {\n                this.setState({\n                    countries: data.data\n                })\n            });\n    }\n\n    loadAuthors = () => {\n        BibliothecService.fetchAuthors()\n            .then((data) => {\n                this.setState({\n                    authors: data.data\n                })\n            });\n    }\n\n    deleteBook = (id) => {\n        BibliothecService.deleteBook(id)\n            .then(() => {\n                this.loadBooks();\n            });\n    }\n\n    takeBook = (id) => {\n        BibliothecService.markAsTakenBook(id)\n            .then(() => {\n                this.loadBooks();\n            });\n    }\n\n    addBook = (name,category, author,availableCopies) => {\n        BibliothecService.addBook(name,category, author,availableCopies)\n            .then(() => {\n                this.loadBooks();\n            });\n    }\n\n    getBook = (id) => {\n      BibliothecService.getBook(id)\n          .then((data) => {\n              this.setState({\n                  selectedBook: data.data\n              })\n          })\n    }\n\n    editBook = (id,name,category, author,availableCopies) => {\n      BibliothecService.editBook(id,name,category, author,availableCopies)\n          .then(() => {\n              this.loadBooks();\n          });\n    }\n\n    componentDidMount() {\n        this.loadBooks();\n        this.loadCategories();\n        this.loadCountries();\n        this.loadAuthors();\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}